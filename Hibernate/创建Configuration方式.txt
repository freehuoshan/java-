创建Configuration:	(org.hibernate.cfg.Configuration实例代表了应用程序到SQL数据库的映射配置,一旦SessionFactory创建完成,它就被丢弃了)
	1.hibernate.properties作为配置文件:	(在hibernate发布包的project\etc路径下)
		>>Configuration cfg = new Configuration()
				.addResource("Item.hbm.xml");
				.addResource("Bid.hbm.xml")
		>>Configuration cfg = new Configuration()
				.addClass(wang.Item.class);
				.addClass(wang.Bid.class)
	2.hibernate.cfg.xml作为配置文件:
		>>Configuration cfg = new Configuration()
				//congure()将会负责加载hibernate.cfg.xml文件
				.configure();
	3.不使用配置文件:
		//实例化Configuration，不加载任何配置文件
		Configuration conf = new Configuration()
			//通过addClass方法添加持久化类
			.addClass(org.crazyit.app.domain.News.class)
			//通过setProperty设置Hibernate的连接属性。
			.setProperty("hibernate.connection.driver_class" , "com.mysql.jdbc.Driver")
			.setProperty("hibernate.connection.url" , "jdbc:mysql://localhost/hibernate")
			.setProperty("hibernate.connection.username" , "root")
			.setProperty("hibernate.connection.password" , "32147")
			.setProperty("hibernate.c3p0.max_size" , "20")
			.setProperty("hibernate.c3p0.min_size" , "1")
			.setProperty("hibernate.c3p0.timeout" , "5000")
			.setProperty("hibernate.c3p0.max_statements" , "100")
			.setProperty("hibernate.c3p0.idle_test_period" , "3000")
			.setProperty("hibernate.c3p0.acquire_increment" , "2")
			.setProperty("hibernate.c3p0.validate" , "true")
			.setProperty("hibernate.dialect" , "org.hibernate.dialect.MySQLInnoDBDialect")
			.setProperty("hibernate.hbm2ddl.auto" , "create");
		
	
